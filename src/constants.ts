export enum Shape {
    O = "O",
    I = "I",
    S = "S",
    Z = "Z",
    L = "L",
    J = "J",
    T = "T"
}

export const shapeList = Object.values(Shape);

export const shapeChart: Record<Shape, string[][][]> = {
    O: [[["", "", "", ""],
            ["", "o", "o", ""],
            ["", "o", "o", ""],
            ["", "", "", ""]]],
        
    I: [[["", "o", "", ""],
            ["", "o", "", ""],
            ["", "o", "", ""],
            ["", "o", "", ""]],
        [["", "", "", ""],
            ["o", "o", "o", "o"],
            ["", "", "", ""],
            ["", "", "", ""]],
        [["", "", "o", ""],
            ["", "", "o", ""],
            ["", "", "o", ""],
            ["", "", "o", ""]],
        [["", "", "", ""],
            ["", "", "", ""],
            ["o", "o", "o", "o"],
            ["", "", "", ""]]],

    S: [[["", "o", "o"],
            ["o", "o", ""],
            ["", "", ""]],
        [["", "o", ""],
            ["", "o", "o"],
            ["", "", "o"]],
        [["", "", ""],
            ["", "o", "o"],
            ["o", "o", ""]],
        [["o", "", ""],
            ["o", "o", ""],
            ["", "o", ""]]],

    Z: [[["o", "o", ""],
            ["", "o", "o"],
            ["", "", ""]],
        [["", "", "o"],
            ["", "o", "o"],
            ["", "o", ""]],
        [["", "", ""],
            ["o", "o", ""],
            ["", "o", "o"]],
        [["", "o", ""],
            ["o", "o", ""],
            ["o", "", ""]]],

    L: [[["", "", "o"],
            ["o", "o", "o"],
            ["", "", ""]],
        [["", "o", ""],
            ["", "o", ""],
            ["", "o", "o"]],
        [["", "", ""],
            ["o", "o", "o"],
            ["o", "", ""]],
        [["o", "o", ""],
            ["", "o", ""],
            ["", "o", ""]]],

    J: [[["o", "", ""],
            ["o", "o", "o"],
            ["", "", ""]],
        [["", "o", "o"],
            ["", "o", ""],
            ["", "o", ""]],
        [["", "", ""],
            ["o", "o", "o"],
            ["", "", "o"]],
        [["", "o", ""],
            ["", "o", ""],
            ["o", "o", ""]]],
            
    T: [[["", "o", ""],
            ["o", "o", "o"],
            ["", "", ""]],
        [["", "o", ""],
            ["", "o", "o"],
            ["", "o", ""]],
            [["", "", ""],
            ["o", "o", "o"],
            ["", "o", ""]],
            [["", "o", ""],
            ["o", "o", ""],
            ["", "o", ""]]],
};

type ShapeType = Record<Shape, string>;
type RotateableShapes = keyof Omit<ShapeType, Shape.O>;

/**
 * TODO: add desc and link
 */
export const srs_chart: Record<RotateableShapes, number[][][][]> = {
    I: [[
            [[0, 0], [-2, 0], [1, 0], [-2, 1], [1, -2]], [[0, 0], [1, 0], [-2, 0], [1, 2], [-2, -1]]
        ],
        [
            [[0, 0], [-1, 0], [2, 0], [-1, -2], [2, 1]], [[0, 0], [-2, 0], [1, 0], [-2, 1], [1, -2]]
        ],
        [
            [[0, 0], [2, 0], [-1, 0], [2, -1], [-1, 2]], [[0, 0], [-1, 0], [2, 0], [-1, -2], [2, 1]]
        ],
        [
            [[0, 0], [1, 0], [-2, 0], [1, 2], [-2, -1]], [[0, 0], [2, 0], [-1, 0], [2, -1], [-1, 2]]
        ]],

    S: [[
            [[0, 0], [1, 0], [1, -1], [0, 2], [1, 2]], [[0, 0], [-1, 0], [-1, -1], [0, 2], [-1, 2]]
        ],
        [
            [[0, 0], [1, 0], [1, 1], [0, -2], [1, -2]], [[0, 0], [1, 0], [1, 1], [0, -2], [1, -2]]
        ],
        [
            [[0, 0], [-1, 0], [-1, -1], [0, 2], [-1, 2]], [[0, 0], [1, 0], [1, -1], [0, 2], [1, 2]]
        ],
        [
            [[0, 0], [-1, 0], [-1, 1], [0, -2], [-1, -2]], [[0, 0], [-1, 0], [-1, 1], [0, -2], [-1, -2]]
        ]],

    Z: [[
            [[0, 0], [1, 0], [1, -1], [0, 2], [1, 2]], [[0, 0], [-1, 0], [-1, -1], [0, 2], [-1, 2]]
        ],
        [
            [[0, 0], [1, 0], [1, 1], [0, -2], [1, -2]], [[0, 0], [1, 0], [1, 1], [0, -2], [1, -2]]
        ],
        [
            [[0, 0], [-1, 0], [-1, -1], [0, 2], [-1, 2]], [[0, 0], [1, 0], [1, -1], [0, 2], [1, 2]]
        ],
        [
            [[0, 0], [-1, 0], [-1, 1], [0, -2], [-1, -2]], [[0, 0], [-1, 0], [-1, 1], [0, -2], [-1, -2]]
        ]],

    L: [[
            [[0, 0], [1, 0], [1, -1], [0, 2], [1, 2]], [[0, 0], [-1, 0], [-1, -1], [0, 2], [-1, 2]]
        ],
        [
            [[0, 0], [1, 0], [1, 1], [0, -2], [1, -2]], [[0, 0], [-1, 0], [-1, 1], [0, -2], [-1, -2]]
        ],
        [
            [[0, 0], [-1, 0], [-1, -1], [0, 2], [-1, 2]], [[0, 0], [1, 0], [1, -1], [0, 2], [1, 2]]
        ],
        [
            [[0, 0], [-1, 0], [-1, 1], [0, -2], [-1, -2]], [[0, 0], [-1, 0], [-1, 1], [0, -2], [-1, -2]]
        ]],

    J: [[
            [[0, 0], [1, 0], [1, -1], [0, 2], [1, 2]], [[0, 0], [-1, 0], [-1, -1], [0, 2], [-1, 2]]
        ],
        [
            [[0, 0], [1, 0], [1, 1], [0, -2], [1, -2]], [[0, 0], [-1, 0], [-1, 1], [0, -2], [-1, -2]]
        ],
        [
            [[0, 0], [-1, 0], [-1, -1], [0, 2], [-1, 2]], [[0, 0], [1, 0], [1, -1], [0, 2], [1, 2]]
        ],
        [
            [[0, 0], [-1, 0], [-1, 1], [0, -2], [-1, -2]], [[0, 0], [-1, 0], [-1, 1], [0, -2], [-1, -2]]
        ]],

    T: [[
            [[0, 0], [1, 0], [1, -1], [0, 2], [1, 2]], [[0, 0], [-1, 0], [-1, -1], [0, 2], [-1, 2]]
        ],
        [
            [[0, 0], [1, 0], [1, 1], [0, -2], [1, -2]], [[0, 0], [1, 0], [1, 1], [0, -2], [1, -2]]
        ],
        [
            [[0, 0], [-1, 0], [-1, -1], [0, 2], [-1, 2]], [[0, 0], [1, 0], [1, -1], [0, 2], [1, 2]]
        ],
        [
            [[0, 0], [-1, 0], [-1, 1], [0, -2], [-1, -2]], [[0, 0], [-1, 0], [-1, 1], [0, -2], [-1, -2]]
        ]],
};